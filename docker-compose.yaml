version: '3'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow          
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6
    container_name: dataset_pipeline-mongo
    ports:
      - "27017:27017"
    volumes: 
      - mongo_data:/data/db
    networks:
      - airflow

  webserver:
    image: apache/airflow:2.10.2
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=your_fernet_key_here
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True           
      - AIRFLOW__CORE__LOAD_EXAMPLES=False

      # Auto-create admin user
      - _AIRFLOW_WWW_USER_CREATE=True
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
      - _AIRFLOW_WWW_USER_FIRSTNAME=Admin
      - _AIRFLOW_WWW_USER_LASTNAME=User
      - _AIRFLOW_WWW_USER_EMAIL=admin@example.com
      - _AIRFLOW_WWW_USER_ROLE=Admin

    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: >
      bash -c "
        pip install -r /requirements.txt && 
        airflow db upgrade &&
        airflow users create \
          --username $$(_AIRFLWO_WWW_USER_USERNAME) \
          --password $$(_AIRFLOW_WWW_USER_PASSWORD) \
          --firstname $$(_AIRFLOW_WWW_USER_FIRSTNAME) \
          --lastname $$(_AIRFLOW_WWW_USER_LASTNAME) \
          --role $$(_AIRFLOW_WWW_USER_ROLE) \
          --email $$(_AIRFLOW_WWW_USER_EMAIL) || true &&
        airflow webserver
      "
    networks:
      - airflow

  scheduler:
    image: apache/airflow:2.10.2
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs    
      - ./airflow/plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    command: bash -c "pip install -r /requirements.txt && airflow scheduler"
    networks:
      - airflow

  airflow-init:
    image: apache/airflow:2.10.2
    entrypoint: /bin/bash
    command: -c "pip install -r /requirements.txt && airflow db init"
    environment: 
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes: 
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    depends_on:
      - postgres
    networks:
      - airflow

volumes:
  postgres_data:
  mongo_data:
  
networks:
  airflow: